"""empty message

Revision ID: baab742c8bef
Revises: 
Create Date: 2018-09-02 15:27:55.314000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'baab742c8bef'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adaptation_node',
    sa.Column('AdaptationNodeID', sa.Integer(), nullable=False),
    sa.Column('TaxonomyID', sa.Integer(), nullable=True),
    sa.Column('AdaptationNodeName', sa.String(length=100), nullable=True),
    sa.Column('AdaptationNodeDescription', sa.String(length=500), nullable=True),
    sa.Column('AdaptationNodeVerb', sa.String(length=10), nullable=True),
    sa.Column('AdaptationNodePath', sa.String(length=500), nullable=True),
    sa.Column('AdaptationNodeRequest', sa.String(length=500), nullable=True),
    sa.Column('AdaptationNodeResponse', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('AdaptationNodeID')
    )
    op.create_table('api_element_type',
    sa.Column('ApiElementTypeID', sa.Integer(), nullable=False),
    sa.Column('ApiElementTypeName', sa.String(length=500), nullable=True),
    sa.Column('ApiElementTypeDescription', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('ApiElementTypeID')
    )
    op.create_table('differential_timing',
    sa.Column('DifferentialTimingID', sa.Integer(), nullable=False),
    sa.Column('DifferentialTimingName', sa.String(length=100), nullable=True),
    sa.Column('DifferentialTimingDescription', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('DifferentialTimingID')
    )
    op.create_table('differential_type',
    sa.Column('DifferentialTypeID', sa.Integer(), nullable=False),
    sa.Column('DifferentialTypeDescription', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('DifferentialTypeID')
    )
    op.create_table('differential',
    sa.Column('DifferentialID', sa.Integer(), nullable=False),
    sa.Column('ApiName', sa.String(length=500), nullable=True),
    sa.Column('ApiServer', sa.String(length=500), nullable=True),
    sa.Column('ApiOldVersion', sa.String(length=50), nullable=True),
    sa.Column('ApiNewVersion', sa.String(length=50), nullable=True),
    sa.Column('DifferentialTypeID', sa.Integer(), nullable=False),
    sa.Column('DifferentialTimingID', sa.Integer(), nullable=False),
    sa.Column('ElementPath', sa.String(length=500), nullable=True),
    sa.Column('OldElement', sa.String(length=500), nullable=True),
    sa.Column('NewElement', sa.String(length=500), nullable=True),
    sa.Column('ApiResource', sa.String(length=500), nullable=True),
    sa.Column('ApiElementTypeID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ApiElementTypeID'], ['api_element_type.ApiElementTypeID'], ),
    sa.ForeignKeyConstraint(['DifferentialTimingID'], ['differential_timing.DifferentialTimingID'], ),
    sa.ForeignKeyConstraint(['DifferentialTypeID'], ['differential_type.DifferentialTypeID'], use_alter=True),
    sa.PrimaryKeyConstraint('DifferentialID')
    )
    op.create_table('taxonomy',
    sa.Column('TaxonomyID', sa.Integer(), nullable=False),
    sa.Column('Description', sa.String(length=500), nullable=True),
    sa.Column('DifferentialTypeID', sa.Integer(), nullable=False),
    sa.Column('DifferentialTimingID', sa.Integer(), nullable=False),
    sa.Column('ApiElementTypeID', sa.Integer(), nullable=False),
    sa.Column('AdaptationNodeID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ApiElementTypeID'], ['api_element_type.ApiElementTypeID'], ),
    sa.ForeignKeyConstraint(['DifferentialTimingID'], ['differential_timing.DifferentialTimingID'], ),
    sa.ForeignKeyConstraint(['DifferentialTypeID'], ['differential_type.DifferentialTypeID'], ),
    sa.PrimaryKeyConstraint('TaxonomyID')
    )
    op.create_table('differential_adaptation',
    sa.Column('DifferentialAdaptationID', sa.Integer(), nullable=False),
    sa.Column('DifferentialID', sa.Integer(), nullable=True),
    sa.Column('AdaptationNodeID', sa.Integer(), nullable=True),
    sa.Column('ApiServer', sa.String(length=500), nullable=True),
    sa.Column('ApiResource', sa.String(length=500), nullable=True),
    sa.Column('AdaptationNodeVerb', sa.String(length=10), nullable=True),
    sa.Column('AdaptationNodePath', sa.String(length=500), nullable=True),
    sa.Column('AdaptationNodeRequest', sa.String(length=500), nullable=True),
    sa.Column('AdaptationNodeResponse', sa.String(length=500), nullable=True),
    sa.Column('DifferentialTypeID', sa.Integer(), nullable=True),
    sa.Column('DifferentialTimingID', sa.Integer(), nullable=True),
    sa.Column('ElementPath', sa.String(length=500), nullable=True),
    sa.Column('OldElement', sa.String(length=500), nullable=True),
    sa.Column('NewElement', sa.String(length=500), nullable=True),
    sa.Column('ApiOldVersion', sa.String(length=50), nullable=True),
    sa.Column('ApiNewVersion', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['AdaptationNodeID'], ['adaptation_node.AdaptationNodeID'], ),
    sa.ForeignKeyConstraint(['DifferentialID'], ['differential.DifferentialID'], ),
    sa.ForeignKeyConstraint(['DifferentialTimingID'], ['differential_timing.DifferentialTimingID'], ),
    sa.ForeignKeyConstraint(['DifferentialTypeID'], ['differential_type.DifferentialTypeID'], ),
    sa.PrimaryKeyConstraint('DifferentialAdaptationID')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('differential_adaptation')
    op.drop_table('taxonomy')
    op.drop_table('differential')
    op.drop_table('differential_type')
    op.drop_table('differential_timing')
    op.drop_table('api_element_type')
    op.drop_table('adaptation_node')
    # ### end Alembic commands ###
